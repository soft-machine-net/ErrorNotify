# 設定で置き換え用のパラメータ
parameters:
    # メールパラメータ
    from_mail: "from@error.com"
    to_email: "to@error.com"
    send_level: "DEBUG"
    # DB保存用のレベル
    record_level: "CRITICAL"

# カスタムハンドラー
services:
    plugin.error_notify.service.error_log_service:
        class: Plugin\ErrorNotify\Service\ErrorLogService
    plugin.error_notify.monolog.handler.error_log_db_handler:
        class: Plugin\ErrorNotify\Monolog\Handler\ErrorLogDBHandler
        arguments:
            - "@doctrine.orm.entity_manager"
            - '@plugin.error_notify.service.error_log_service'
            - '%record_level%'

    plugin.error_notify.monolog.handler.error_log_mailer_handler:
        class: Plugin\ErrorNotify\Monolog\Handler\ErrorLogMailerHandler
        arguments:
            - '@swiftmailer.mailer.default.transport.real'
            - '@plugin.error_notify.service.error_log_service'
            - 'ERROR'
            - "to@error.com"
            - "from@error.com"


# ログ計測の設定
monolog:
    handlers:
        # fingers_crossed
        main:
            type:         fingers_crossed
            action_level: DEBUG
            channels: ['front', 'admin', 'php', 'app']
            handler:    grouped
        grouped:
            type: group
            members: [streamed, deduplicated_doctrine, deduplicated_custom_mailer]

        # ログファイルの保存
        streamed:
            type:  stream
            path:  '%kernel.logs_dir%/%kernel.environment%.log'
            level: debug
        
        # DB保存きのう
        deduplicated_doctrine:
            type:    deduplication
            handler: doctrine
            time: 5
        doctrine:
            type: service
            id: plugin.error_notify.monolog.handler.error_log_db_handler

        # メール送信機能
        deduplicated_custom_mailer:
            type:    deduplication
            handler: custom_mailer
            time: 5
        custom_mailer:
            type: service
            id: plugin.error_notify.monolog.handler.error_log_mailer_handler
